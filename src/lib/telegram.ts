// Telegram Bot API configuration
const TELEGRAM_BOT_TOKEN = '8445717266:AAHEDA4SJPUL48gpV-Q9qc-V98GSuyPFn08';
const TELEGRAM_CHAT_ID = '@Phuketga'; // –ò—Å–ø–æ–ª—å–∑—É–µ–º @username –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram
export interface BookingData {
  tourTitle: string;
  adults: number;
  children: number;
  selectedDate: string;
  contactInfo: {
    name: string;
    phone: string;
    email: string;
    comment: string;
  };
  totalPrice: number;
  currency: string;
}

export const sendTelegramNotification = async (bookingData: BookingData): Promise<boolean> => {
  try {
    const message = formatBookingMessage(bookingData);
    
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: message,
        parse_mode: 'HTML',
      }),
    });

    if (!response.ok) {
      const errorData = await response.json();
      console.error('Telegram API error:', errorData);
      return false;
    }

    console.log('Notification sent to Telegram successfully');
    return true;
  } catch (error) {
    console.error('Error sending Telegram notification:', error);
    return false;
  }
};

const formatBookingMessage = (data: BookingData): string => {
  const { tourTitle, adults, children, selectedDate, contactInfo, totalPrice, currency } = data;
  
  return `
üÜï <b>–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –ë–†–û–ù–ò–†–û–í–ê–ù–ò–ï</b>

üèùÔ∏è <b>–¢—É—Ä:</b> ${tourTitle}
üìÖ <b>–î–∞—Ç–∞:</b> ${selectedDate || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}

üë• <b>–£—á–∞—Å—Ç–Ω–∏–∫–∏:</b>
‚Ä¢ –í–∑—Ä–æ—Å–ª—ã–µ: ${adults} —á–µ–ª.
‚Ä¢ –î–µ—Ç–∏: ${children} —á–µ–ª.
‚Ä¢ <b>–í—Å–µ–≥–æ:</b> ${adults + children} —á–µ–ª.

üí∞ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> ${totalPrice.toLocaleString()} ${currency}

üë§ <b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
‚Ä¢ <b>–ò–º—è:</b> ${contactInfo.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
‚Ä¢ <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${contactInfo.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}
‚Ä¢ <b>Email:</b> ${contactInfo.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}

${contactInfo.comment ? `üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b>\n${contactInfo.comment}` : ''}

‚è∞ <b>–í—Ä–µ–º—è –∑–∞—è–≤–∫–∏:</b> ${new Date().toLocaleString('ru-RU', { 
  timeZone: 'Asia/Bangkok',
  year: 'numeric',
  month: '2-digit',
  day: '2-digit',
  hour: '2-digit',
  minute: '2-digit'
})} (Bangkok)
`.trim();
};

// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ WhatsApp (–∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç)
export const sendWhatsAppMessage = (bookingData: BookingData): void => {
  const { tourTitle, adults, children, selectedDate, contactInfo, totalPrice, currency } = bookingData;
  
  const message = `üèùÔ∏è –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –ë–†–û–ù–ò–†–û–í–ê–ù–ò–ï

üéØ –¢–£–†: ${tourTitle}
üìÖ –î–ê–¢–ê: ${selectedDate || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
üë• –£–ß–ê–°–¢–ù–ò–ö–ò: ${adults} –≤–∑—Ä. + ${children} –¥–µ—Ç.
üí∞ –ò–¢–û–ì–û: ${totalPrice.toLocaleString()} ${currency}

üë§ –ö–û–ù–¢–ê–ö–¢–´:
–ò–º—è: ${contactInfo.name}
–¢–µ–ª–µ—Ñ–æ–Ω: ${contactInfo.phone}
Email: ${contactInfo.email}
${contactInfo.comment ? `–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${contactInfo.comment}` : ''}

‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}`;

  const encodedMessage = encodeURIComponent(message);
  const whatsappUrl = `https://wa.me/66934740231?text=${encodedMessage}`;
  window.open(whatsappUrl, '_blank');
};