import React, { useState } from 'react';
import { useParams, Link } from 'react-router-dom';
import { phiPhi2DaysTourData as phiPhiTourData } from '@/data/tours/phi-phi-2days';
import { ChevronLeft, Calendar, Users, Phone, Mail, User, MapPin } from 'lucide-react';

export const BookingPageNew: React.FC = () => {
  const { tourId } = useParams();
  const [formData, setFormData] = useState({
    date: '',
    adults: 2,
    children: 0,
    infants: 0,
    name: '',
    phone: '',
    email: '',
    hotelName: '',
    specialRequests: ''
  });
  const [isLoading, setIsLoading] = useState(false);
  const [step, setStep] = useState(1); // –ú–Ω–æ–≥–æ—à–∞–≥–æ–≤–∞—è —Ñ–æ—Ä–º–∞

  // –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ —Ü–µ–Ω—ã
  const calculateTotal = () => {
    return (formData.adults * phiPhiTourData.priceAdult) + 
           (formData.children * phiPhiTourData.priceChild);
  };

  // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
  const isStep1Valid = formData.date && formData.adults >= 1;
  const isStep2Valid = formData.name.trim() && formData.phone.trim();

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsLoading(true);

    const totalPrice = calculateTotal();
    const bookingId = 'PH' + Date.now().toString().slice(-6);

    const message = `üèùÔ∏è –ù–û–í–û–ï –ë–†–û–ù–ò–†–û–í–ê–ù–ò–ï #${bookingId}

üìã –¢–£–†: ${phiPhiTourData.title}
üìÖ –î–∞—Ç–∞: ${new Date(formData.date).toLocaleDateString('ru-RU', { 
  weekday: 'long', 
  year: 'numeric', 
  month: 'long', 
  day: 'numeric' 
})}

üë• –ì–û–°–¢–ò:
‚Ä¢ –í–∑—Ä–æ—Å–ª—ã–µ: ${formData.adults} —á–µ–ª. √ó ${phiPhiTourData.priceAdult}‡∏ø = ${formData.adults * phiPhiTourData.priceAdult}‡∏ø
‚Ä¢ –î–µ—Ç–∏: ${formData.children} —á–µ–ª. √ó ${phiPhiTourData.priceChild}‡∏ø = ${formData.children * phiPhiTourData.priceChild}‡∏ø
‚Ä¢ –ú–ª–∞–¥–µ–Ω—Ü—ã: ${formData.infants} —á–µ–ª. (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)

üí∞ –ò–¢–û–ì–û –ö –û–ü–õ–ê–¢–ï: ${totalPrice}‡∏ø

üë§ –ö–û–ù–¢–ê–ö–¢–´:
‚Ä¢ –ò–º—è: ${formData.name}
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}
‚Ä¢ Email: ${formData.email || '–Ω–µ —É–∫–∞–∑–∞–Ω'}
‚Ä¢ –û—Ç–µ–ª—å: ${formData.hotelName || '–Ω–µ —É–∫–∞–∑–∞–Ω'}

üìù –ü–æ–∂–µ–ª–∞–Ω–∏—è: ${formData.specialRequests || '–Ω–µ—Ç'}

‚è∞ –ó–∞—è–≤–∫–∞ –æ—Ç: ${new Date().toLocaleString('ru-RU')}
üÜî ID –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: ${bookingId}`;

    try {
      // –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ Telegram Bot API
      console.log('üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ Telegram Bot API...');
      const response = await fetch(`https://api.telegram.org/bot8445717266:AAHEDA4SJPUL48gpV-Q9qc-V98GSuyPFn08/sendMessage`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          chat_id: '@Phuketga',
          text: message
        })
      });

      const result = await response.json();
      console.log('üìã Telegram API response:', result);

      if (response.ok && result.ok) {
        // –£—Å–ø–µ—à–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ API
        alert(`‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ #${bookingId} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!\n\n–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 —á–∞—Å–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.`);
        
        // –û—á–∏—Å—Ç–∏—Ç—å —Ñ–æ—Ä–º—É
        setFormData({
          date: '',
          adults: 2,
          children: 0,
          infants: 0,
          name: '',
          phone: '',
          email: '',
          hotelName: '',
          specialRequests: ''
        });
        setStep(1);
      } else {
        throw new Error(`API Error: ${result.description || 'Unknown error'}`);
      }
    } catch (error) {
      console.error('‚ùå Telegram API failed:', error);
      
      // Fallback - –æ—Ç–∫—Ä—ã—Ç—å Telegram —á–∞—Ç
      const telegramUrl = `https://t.me/Phuketga?text=${encodeURIComponent(message)}`;
      window.open(telegramUrl, '_blank');
      
      alert(`‚ö†Ô∏è –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ #${bookingId} –≥–æ—Ç–æ–≤–æ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ!\n\n–û—Ç–∫—Ä–æ–µ—Ç—Å—è Telegram –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.`);
    }

    setIsLoading(false);
  };

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —à–∞–≥–∞ 1: –í—ã–±–æ—Ä –¥–∞—Ç—ã –∏ –≥–æ—Å—Ç–µ–π
  const Step1 = () => (
    <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="text-center">
        <h2 className="text-xl font-bold text-gray-800">–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π</h2>
        <p className="text-sm text-gray-600 mt-1">–®–∞–≥ 1 –∏–∑ 2</p>
      </div>

      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä */}
      <div className="w-full bg-gray-200 rounded-full h-2">
        <div className="bg-blue-500 h-2 rounded-full w-1/2 transition-all duration-300"></div>
      </div>

      {/* –î–∞—Ç–∞ –ø–æ–µ–∑–¥–∫–∏ */}
      <div className="bg-white border border-gray-200 rounded-xl p-4 shadow-sm">
        <label className="flex items-center text-sm font-medium text-gray-700 mb-3">
          <Calendar className="w-4 h-4 mr-2 text-blue-500" />
          –î–∞—Ç–∞ –ø–æ–µ–∑–¥–∫–∏
        </label>
        <input
          type="date"
          className="w-full p-4 border border-gray-300 rounded-lg text-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
          value={formData.date}
          onChange={(e) => setFormData({...formData, date: e.target.value})}
          min={new Date().toISOString().split('T')[0]}
        />
      </div>

      {/* –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π */}
      <div className="bg-white border border-gray-200 rounded-xl p-4 shadow-sm">
        <label className="flex items-center text-sm font-medium text-gray-700 mb-4">
          <Users className="w-4 h-4 mr-2 text-blue-500" />
          –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π
        </label>
        
        <div className="space-y-4">
          {/* –í–∑—Ä–æ—Å–ª—ã–µ */}
          <div className="flex items-center justify-between p-4 bg-blue-50 rounded-lg border border-blue-100">
            <div>
              <div className="font-medium text-gray-800">–í–∑—Ä–æ—Å–ª—ã–µ</div>
              <div className="text-sm text-gray-600">–æ—Ç 12 –ª–µ—Ç ‚Ä¢ {phiPhiTourData.priceAdult}‡∏ø</div>
            </div>
            <div className="flex items-center space-x-3">
              <button
                type="button"
                className="w-10 h-10 rounded-full bg-white border-2 border-blue-200 flex items-center justify-center text-xl font-bold text-blue-600 hover:bg-blue-50 active:scale-95 transition-all"
                onClick={() => setFormData({...formData, adults: Math.max(1, formData.adults - 1)})}
              >‚àí</button>
              <span className="w-8 text-center font-bold text-lg text-gray-800">{formData.adults}</span>
              <button
                type="button"
                className="w-10 h-10 rounded-full bg-blue-500 text-white flex items-center justify-center text-xl font-bold hover:bg-blue-600 active:scale-95 transition-all"
                onClick={() => setFormData({...formData, adults: formData.adults + 1})}
              >+</button>
            </div>
          </div>

          {/* –î–µ—Ç–∏ */}
          <div className="flex items-center justify-between p-4 bg-green-50 rounded-lg border border-green-100">
            <div>
              <div className="font-medium text-gray-800">–î–µ—Ç–∏</div>
              <div className="text-sm text-gray-600">1-11 –ª–µ—Ç ‚Ä¢ {phiPhiTourData.priceChild}‡∏ø</div>
            </div>
            <div className="flex items-center space-x-3">
              <button
                type="button"
                className="w-10 h-10 rounded-full bg-white border-2 border-green-200 flex items-center justify-center text-xl font-bold text-green-600 hover:bg-green-50 active:scale-95 transition-all"
                onClick={() => setFormData({...formData, children: Math.max(0, formData.children - 1)})}
              >‚àí</button>
              <span className="w-8 text-center font-bold text-lg text-gray-800">{formData.children}</span>
              <button
                type="button"
                className="w-10 h-10 rounded-full bg-green-500 text-white flex items-center justify-center text-xl font-bold hover:bg-green-600 active:scale-95 transition-all"
                onClick={() => setFormData({...formData, children: formData.children + 1})}
              >+</button>
            </div>
          </div>

          {/* –ú–ª–∞–¥–µ–Ω—Ü—ã */}
          <div className="flex items-center justify-between p-4 bg-purple-50 rounded-lg border border-purple-100">
            <div>
              <div className="font-medium text-gray-800">–ú–ª–∞–¥–µ–Ω—Ü—ã</div>
              <div className="text-sm text-gray-600">0-12 –º–µ—Å—è—Ü–µ–≤ ‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω–æ</div>
            </div>
            <div className="flex items-center space-x-3">
              <button
                type="button"
                className="w-10 h-10 rounded-full bg-white border-2 border-purple-200 flex items-center justify-center text-xl font-bold text-purple-600 hover:bg-purple-50 active:scale-95 transition-all"
                onClick={() => setFormData({...formData, infants: Math.max(0, formData.infants - 1)})}
              >‚àí</button>
              <span className="w-8 text-center font-bold text-lg text-gray-800">{formData.infants}</span>
              <button
                type="button"
                className="w-10 h-10 rounded-full bg-purple-500 text-white flex items-center justify-center text-xl font-bold hover:bg-purple-600 active:scale-95 transition-all"
                onClick={() => setFormData({...formData, infants: formData.infants + 1})}
              >+</button>
            </div>
          </div>
        </div>
      </div>

      {/* –ò—Ç–æ–≥–æ */}
      <div className="bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-xl p-6 shadow-lg">
        <div className="text-center">
          <div className="text-sm opacity-90">–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å</div>
          <div className="text-3xl font-bold mt-1">{calculateTotal()}‡∏ø</div>
          <div className="text-xs opacity-75 mt-1">
            {formData.adults > 0 && `${formData.adults} –≤–∑—Ä.`}
            {formData.children > 0 && ` + ${formData.children} –¥–µ—Ç.`}
            {formData.infants > 0 && ` + ${formData.infants} –º–ª.`}
          </div>
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –¥–∞–ª–µ–µ */}
      <button
        type="button"
        onClick={() => setStep(2)}
        disabled={!isStep1Valid}
        className="w-full bg-blue-500 hover:bg-blue-600 disabled:bg-gray-300 disabled:cursor-not-allowed text-white font-bold py-4 px-6 rounded-xl text-lg transition-all duration-200 active:scale-98"
      >
        –î–∞–ª–µ–µ: –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ‚Üí
      </button>
    </div>
  );

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —à–∞–≥–∞ 2: –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  const Step2 = () => (
    <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="text-center">
        <h2 className="text-xl font-bold text-gray-800">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
        <p className="text-sm text-gray-600 mt-1">–®–∞–≥ 2 –∏–∑ 2</p>
      </div>

      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä */}
      <div className="w-full bg-gray-200 rounded-full h-2">
        <div className="bg-blue-500 h-2 rounded-full w-full transition-all duration-300"></div>
      </div>

      {/* –°–≤–æ–¥–∫–∞ –∑–∞–∫–∞–∑–∞ */}
      <div className="bg-blue-50 border border-blue-200 rounded-xl p-4">
        <h3 className="font-medium text-blue-800 mb-2">üìã –í–∞—à–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</h3>
        <div className="text-sm text-blue-700 space-y-1">
          <div>üìÖ {new Date(formData.date).toLocaleDateString('ru-RU')}</div>
          <div>üë• {formData.adults + formData.children + formData.infants} –≥–æ—Å—Ç–µ–π</div>
          <div className="font-bold">üí∞ {calculateTotal()}‡∏ø</div>
        </div>
      </div>

      {/* –§–æ—Ä–º–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ */}
      <div className="space-y-4">
        <div>
          <label className="flex items-center text-sm font-medium text-gray-700 mb-2">
            <User className="w-4 h-4 mr-2 text-blue-500" />
            –í–∞—à–µ –∏–º—è *
          </label>
          <input
            type="text"
            className="w-full p-4 border border-gray-300 rounded-lg text-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            placeholder="–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤"
            value={formData.name}
            onChange={(e) => setFormData({...formData, name: e.target.value})}
          />
        </div>

        <div>
          <label className="flex items-center text-sm font-medium text-gray-700 mb-2">
            <Phone className="w-4 h-4 mr-2 text-blue-500" />
            –¢–µ–ª–µ—Ñ–æ–Ω *
          </label>
          <input
            type="tel"
            className="w-full p-4 border border-gray-300 rounded-lg text-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            placeholder="+66 XX XXX XXXX"
            value={formData.phone}
            onChange={(e) => setFormData({...formData, phone: e.target.value})}
          />
        </div>

        <div>
          <label className="flex items-center text-sm font-medium text-gray-700 mb-2">
            <Mail className="w-4 h-4 mr-2 text-gray-400" />
            Email (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
          </label>
          <input
            type="email"
            className="w-full p-4 border border-gray-300 rounded-lg text-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            placeholder="your@email.com"
            value={formData.email}
            onChange={(e) => setFormData({...formData, email: e.target.value})}
          />
        </div>

        <div>
          <label className="flex items-center text-sm font-medium text-gray-700 mb-2">
            <MapPin className="w-4 h-4 mr-2 text-gray-400" />
            –ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–µ–ª—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
          </label>
          <input
            type="text"
            className="w-full p-4 border border-gray-300 rounded-lg text-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            placeholder="–î–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞"
            value={formData.hotelName}
            onChange={(e) => setFormData({...formData, hotelName: e.target.value})}
          />
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –û—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
          </label>
          <textarea
            className="w-full p-4 border border-gray-300 rounded-lg text-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 h-20 resize-none"
            placeholder="–ê–ª–ª–µ—Ä–≥–∏–∏, –¥–∏–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è, –æ—Å–æ–±—ã–µ –ø—Ä–æ—Å—å–±—ã..."
            value={formData.specialRequests}
            onChange={(e) => setFormData({...formData, specialRequests: e.target.value})}
          />
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ */}
      <div className="space-y-3">
        <button
          type="button"
          onClick={() => setStep(1)}
          className="w-full bg-gray-100 hover:bg-gray-200 text-gray-700 font-medium py-3 px-6 rounded-lg transition-all duration-200"
        >
          ‚Üê –ù–∞–∑–∞–¥
        </button>

        <button
          type="submit"
          disabled={!isStep2Valid || isLoading}
          className="w-full bg-green-500 hover:bg-green-600 disabled:bg-gray-300 disabled:cursor-not-allowed text-white font-bold py-4 px-6 rounded-xl text-lg transition-all duration-200 active:scale-98 shadow-lg"
        >
          {isLoading ? (
            <span className="flex items-center justify-center">
              <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
              –û—Ç–ø—Ä–∞–≤–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...
            </span>
          ) : (
            'üèùÔ∏è –ó–ê–ë–†–û–ù–ò–†–û–í–ê–¢–¨ –¢–£–†'
          )}
        </button>
      </div>
    </div>
  );

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <div className="bg-white border-b border-gray-200 sticky top-0 z-50">
        <div className="max-w-lg mx-auto px-4 py-3">
          <div className="flex items-center space-x-3">
            <Link 
              to="/" 
              className="p-2 hover:bg-gray-100 rounded-lg transition-colors"
            >
              <ChevronLeft className="w-6 h-6 text-gray-600" />
            </Link>
            <div className="flex-1">
              <h1 className="font-bold text-gray-800 truncate">{phiPhiTourData.title}</h1>
              <p className="text-xs text-gray-500">–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—É—Ä–∞</p>
            </div>
          </div>
        </div>
      </div>

      {/* Content */}
      <div className="max-w-lg mx-auto px-4 py-6">
        <form onSubmit={handleSubmit}>
          {step === 1 ? <Step1 /> : <Step2 />}
        </form>
      </div>

      {/* Footer info */}
      <div className="max-w-lg mx-auto px-4 pb-6">
        <div className="bg-white border border-gray-200 rounded-xl p-4">
          <div className="text-center text-sm text-gray-600">
            <p className="font-medium">üìû –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</p>
            <p className="mt-1">
              <a href="https://t.me/Phuketga" className="text-blue-500 hover:underline">
                –ù–∞–ø–∏—à–∏—Ç–µ –≤ Telegram
              </a>
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export const BookingPage = BookingPageNew;
export default BookingPageNew;