import React, { useState } from 'react';
import { useParams } from 'react-router-dom';
import { Header } from "@/components/Header";
import { Footer } from "@/components/Footer";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { phiPhiTourData } from '@/data/phiPhiTour';

export const BookingPage: React.FC = () => {
  const { tourId } = useParams();
  const [formData, setFormData] = useState({
    date: '',
    adults: 1,
    children: 0,
    infants: 0,
    name: ''
  });
  const [isLoading, setIsLoading] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsLoading(true);

    const totalPrice = (formData.adults * phiPhiTourData.priceAdult) + 
                      (formData.children * phiPhiTourData.priceChild);

    const message = `üèùÔ∏è –ù–û–í–´–ô –ó–ê–ö–ê–ó: ${phiPhiTourData.title}

üìÖ –î–∞—Ç–∞ –ø–æ–µ–∑–¥–∫–∏: ${formData.date}
üë• –í–∑—Ä–æ—Å–ª—ã—Ö: ${formData.adults} —á–µ–ª. (${phiPhiTourData.priceAdult}‡∏ø √ó ${formData.adults} = ${formData.adults * phiPhiTourData.priceAdult}‡∏ø)
üë∂ –î–µ—Ç–µ–π (1-11): ${formData.children} —á–µ–ª. (${phiPhiTourData.priceChild}‡∏ø √ó ${formData.children} = ${formData.children * phiPhiTourData.priceChild}‡∏ø)
üçº –ú–ª–∞–¥–µ–Ω—Ü–µ–≤ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ): ${formData.infants} —á–µ–ª.

üí∞ –ò–¢–û–ì–û: ${totalPrice}‡∏ø

üë§ –ö–û–ù–¢–ê–ö–¢ –ö–õ–ò–ï–ù–¢–ê:
üè∑Ô∏è –ò–º—è: ${formData.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}

‚è∞ –í—Ä–µ–º—è –∑–∞–∫–∞–∑–∞: ${new Date().toLocaleString('ru-RU')}`;

    try {
      // –ü–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –∫–∞–Ω–∞–ª @Phuketga
      const response = await fetch(`https://api.telegram.org/bot8445717266:AAHEDA4SJPUL48gpV-Q9qc-V98GSuyPFn08/sendMessage`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          chat_id: '@Phuketga',
          text: message
        })
      });

      if (!response.ok) {
        // –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –∫–∞–Ω–∞–ª, –æ—Ç–∫—Ä—ã–≤–∞–µ–º Telegram –Ω–∞–ø—Ä—è–º—É—é
        const telegramUrl = `https://t.me/Phuketga?text=${encodeURIComponent(message)}`;
        window.open(telegramUrl, '_blank');
        alert('üì± –ó–∞–∫–∞–∑ –≥–æ—Ç–æ–≤! –ú—ã –æ—Ç–∫—Ä—ã–ª–∏ Telegram —á–∞—Ç - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.');
      } else {
        alert('‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
      }
        
      // –û—á–∏—Å—Ç–∏—Ç—å —Ñ–æ—Ä–º—É
      setFormData({
        date: '',
        adults: 1,
        children: 0,
        infants: 0,
        name: ''
      });
    } catch (error) {
      alert('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.');
    }

    setIsLoading(false);
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <Header />
      
      <main className="pt-20 pb-16">
        <div className="container mx-auto px-4">
          <div className="max-w-4xl mx-auto">
            <Card className="shadow-lg">
              <div className="bg-blue-600 text-white px-6 py-4 rounded-t-lg">
                <h1 className="text-2xl font-bold">üèùÔ∏è –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: {phiPhiTourData.title}</h1>
              </div>
              
              <CardContent className="p-6">
                <form onSubmit={handleSubmit}>
                  {/* –î–∞—Ç–∞ –ø–æ–µ–∑–¥–∫–∏ */}
                  <div className="mb-6">
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      üìÖ –î–∞—Ç–∞ –ø–æ–µ–∑–¥–∫–∏ *
                    </label>
                    <input
                      type="date"
                      className="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"
                      value={formData.date}
                      onChange={(e) => setFormData({...formData, date: e.target.value})}
                      required
                      min={new Date().toISOString().split('T')[0]}
                    />
                  </div>

                  {/* –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫ */}
                  <div className="grid md:grid-cols-3 gap-6 mb-6">
                    {/* –í–∑—Ä–æ—Å–ª—ã–µ */}
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        üë• –í–∑—Ä–æ—Å–ª—ã–µ (12+ –ª–µ—Ç) *
                      </label>
                      <div className="flex items-center border border-gray-300 rounded-md">
                        <Button
                          type="button"
                          variant="ghost"
                          size="sm"
                          onClick={() => setFormData({...formData, adults: Math.max(1, formData.adults - 1)})}
                          className="px-3"
                        >
                          -
                        </Button>
                        <input
                          type="number"
                          className="flex-1 text-center border-0 focus:ring-0"
                          value={formData.adults}
                          readOnly
                        />
                        <Button
                          type="button"
                          variant="ghost"
                          size="sm"
                          onClick={() => setFormData({...formData, adults: formData.adults + 1})}
                          className="px-3"
                        >
                          +
                        </Button>
                      </div>
                      <p className="text-sm text-gray-500 mt-1">{phiPhiTourData.priceAdult}‡∏ø –∑–∞ —á–µ–ª–æ–≤–µ–∫–∞</p>
                    </div>

                    {/* –î–µ—Ç–∏ */}
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        üë∂ –î–µ—Ç–∏ (1-11 –ª–µ—Ç)
                      </label>
                      <div className="flex items-center border border-gray-300 rounded-md">
                        <Button
                          type="button"
                          variant="ghost"
                          size="sm"
                          onClick={() => setFormData({...formData, children: Math.max(0, formData.children - 1)})}
                          className="px-3"
                        >
                          -
                        </Button>
                        <input
                          type="number"
                          className="flex-1 text-center border-0 focus:ring-0"
                          value={formData.children}
                          readOnly
                        />
                        <Button
                          type="button"
                          variant="ghost"
                          size="sm"
                          onClick={() => setFormData({...formData, children: formData.children + 1})}
                          className="px-3"
                        >
                          +
                        </Button>
                      </div>
                      <p className="text-sm text-gray-500 mt-1">{phiPhiTourData.priceChild}‡∏ø –∑–∞ —Ä–µ–±–µ–Ω–∫–∞</p>
                    </div>

                    {/* –ú–ª–∞–¥–µ–Ω—Ü—ã */}
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        üçº –ú–ª–∞–¥–µ–Ω—Ü—ã (0-12 –º–µ—Å)
                      </label>
                      <div className="flex items-center border border-gray-300 rounded-md">
                        <Button
                          type="button"
                          variant="ghost"
                          size="sm"
                          onClick={() => setFormData({...formData, infants: Math.max(0, formData.infants - 1)})}
                          className="px-3"
                        >
                          -
                        </Button>
                        <input
                          type="number"
                          className="flex-1 text-center border-0 focus:ring-0"
                          value={formData.infants}
                          readOnly
                        />
                        <Button
                          type="button"
                          variant="ghost"
                          size="sm"
                          onClick={() => setFormData({...formData, infants: formData.infants + 1})}
                          className="px-3"
                        >
                          +
                        </Button>
                      </div>
                      <p className="text-sm text-gray-500 mt-1">–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</p>
                    </div>
                  </div>

                  {/* –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å */}
                  <div className="bg-blue-50 border border-blue-200 rounded-md p-4 mb-6">
                    <h3 className="text-lg font-semibold text-blue-800">
                      üí∞ –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {(formData.adults * phiPhiTourData.priceAdult) + (formData.children * phiPhiTourData.priceChild)} ‡∏ø
                    </h3>
                  </div>

                  {/* –ò–º—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) */}
                  <div className="mb-6">
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      üë§ –ò–º—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
                    </label>
                    <input
                      type="text"
                      className="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"
                      value={formData.name}
                      onChange={(e) => setFormData({...formData, name: e.target.value})}
                      placeholder="–í–∞—à–µ –∏–º—è"
                    />
                  </div>

                  {/* –ö–Ω–æ–ø–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */}
                  <Button
                    type="submit"
                    className="w-full bg-green-600 hover:bg-green-700 text-white text-lg py-3"
                    disabled={isLoading}
                  >
                    {isLoading ? '–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞...' : 'üèùÔ∏è –ó–ê–ë–†–û–ù–ò–†–û–í–ê–¢–¨'}
                  </Button>
                </form>
              </CardContent>
            </Card>
          </div>
        </div>
      </main>
      
      <Footer />
    </div>
  );
};