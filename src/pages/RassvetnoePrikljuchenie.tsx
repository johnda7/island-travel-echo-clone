import { useState, useEffect, useCallback } from "react";
import { Link } from "react-router-dom";
import { Header } from "@/components/Header";
import { Footer } from "@/components/Footer";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Clock, Users, MapPin, Star, Calendar, X, ChevronLeft, ChevronRight, Grid3X3, Minus, Plus } from "lucide-react";

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –Ω–∞—à–µ–π –ø–∞–ø–∫–∏
import airplaneBeach from "@/assets/rassvetnoe-prikljuchenie/airplane-beach.jpg";
import beyondSkywalk from "@/assets/rassvetnoe-prikljuchenie/beyond-skywalk.jpg";
import babyElephantShow from "@/assets/rassvetnoe-prikljuchenie/baby-elephant-show.jpg";
import elephantShow from "@/assets/rassvetnoe-prikljuchenie/elephant-show.jpg";
import elephantSpa from "@/assets/rassvetnoe-prikljuchenie/elephant-spa.jpg";
import showeringElephant from "@/assets/rassvetnoe-prikljuchenie/showering-elephant.jpg";
import blackMonkStatue from "@/assets/rassvetnoe-prikljuchenie/black-monk-statue.jpg";

const excursion = {
  title: "–†–ê–°–°–í–ï–¢–ù–û–ï –ü–†–ò–ö–õ–Æ–ß–ï–ù–ò–ï",
  subtitle: "–°—Ç–µ–∫–ª—è–Ω–Ω—ã–π –º–æ—Å—Ç Beyond Skywalk, –æ.–î–∂–µ–π–º—Å–∞ –ë–æ–Ω–¥–∞, –ø–ª—è–∂ —Å —Å–∞–º–æ–ª—ë—Ç–∞–º–∏ –∏ –∫—É–≤—à–∏–Ω–∫–∏ Ma Doo Bua",
  priceAdult: 2500,
  priceChild: 2198,
  currency: "‡∏ø",
  duration: "1 –¥–µ–Ω—å (7.5 —á–∞—Å–æ–≤)",
  groupSize: "–¥–æ 12 —á–µ–ª–æ–≤–µ–∫",
  rating: 4.9,
  reviewsCount: 47,
  mainImage: airplaneBeach,
  gallery: [
    airplaneBeach,
    beyondSkywalk,
    babyElephantShow,
    elephantShow,
    elephantSpa,
    showeringElephant,
    blackMonkStatue
  ],
  highlights: [
    "–í—Å—Ç—Ä–µ—á–∞ —Ä–∞—Å—Å–≤–µ—Ç–∞ –Ω–∞ —Å—Ç–µ–∫–ª—è–Ω–Ω–æ–º –º–æ—Å—Ç—É Beyond Skywalk",
    "–ó–∞–≤—Ç—Ä–∞–∫ –Ω–∞ —Å–º–æ—Ç—Ä–æ–≤–æ–π —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º –≤–∏–¥–æ–º",
    "–ü—Ä–æ–≥—É–ª–∫–∞ –Ω–∞ –¥–ª–∏–Ω–Ω–æ—Ö–≤–æ—Å—Ç–æ–π –ª–æ–¥–∫–µ –∫ –æ—Å—Ç—Ä–æ–≤—É –î–∂–µ–π–º—Å–∞ –ë–æ–Ω–¥–∞",
    "–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø–ª—è–∂ —Å –≤–∑–ª–µ—Ç–∞—é—â–∏–º–∏ —Å–∞–º–æ–ª–µ—Ç–∞–º–∏",
    "–§–æ—Ç–æ—Å–µ—Å—Å–∏—è –≤ –∫–∞—Ñ–µ —Å –≥–∏–≥–∞–Ω—Ç—Å–∫–∏–º–∏ –∫—É–≤—à–∏–Ω–∫–∞–º–∏ Ma Doo Bua",
    "–û—Å–º–æ—Ç—Ä –Ω–µ–æ–±–∏—Ç–∞–µ–º—ã—Ö –æ—Å—Ç—Ä–æ–≤–æ–≤ –ø–æ –ø—É—Ç–∏"
  ],
  included: [
    "–¢—Ä–∞–Ω—Å—Ñ–µ—Ä –∏–∑ –æ—Ç–µ–ª—è –∏ –æ–±—Ä–∞—Ç–Ω–æ",
    "–≠–∫—Å–∫—É—Ä—Å–∏–æ–Ω–Ω—ã–π –≥–∏–¥",
    "–°—Ç—Ä–∞—Ö–æ–≤–∫–∞ –Ω–∞ –≤—Ä–µ–º—è —Ç—É—Ä–∞",
    "–ü–æ—Å–µ—â–µ–Ω–∏–µ —Å—Ç–µ–∫–ª—è–Ω–Ω–æ–≥–æ –º–æ—Å—Ç–∞ Beyond Skywalk",
    "–ó–∞–≤—Ç—Ä–∞–∫ –Ω–∞ —Å–º–æ—Ç—Ä–æ–≤–æ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ —à–≤–µ–¥—Å–∫–æ–≥–æ —Å—Ç–æ–ª–∞",
    "–ù–∞–ø–∏—Ç–æ–∫ –≤ –∫–∞—Ñ–µ Ma Doo Bua",
    "–ü—Ä–æ–≥—É–ª–∫–∞ –Ω–∞ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–π –¥–ª–∏–Ω–Ω–æ—Ö–≤–æ—Å—Ç–æ–π –ª–æ–¥–∫–µ"
  ],
  excluded: [
    "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏ –∏ –µ–¥–∞",
    "–°—É–≤–µ–Ω–∏—Ä—ã –∏ –ª–∏—á–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã",
    "–ß–∞–µ–≤—ã–µ –≥–∏–¥—É",
    "–í—Ö–æ–¥–Ω—ã–µ –±–∏–ª–µ—Ç—ã –≤ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏"
  ],
  schedule: [
    { time: "05:45", activity: "–ü—Ä–∏–±—ã—Ç–∏–µ –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –º–æ—Å—Ç Beyond Skywalk: —Å–¥–µ–ª–∞–π—Ç–µ —à–∞–≥ –Ω–∞ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Å—Ç–µ–∫–ª—è–Ω–Ω—ã–π –ø–æ–ª –∏ –Ω–∞—Å–ª–∞–¥–∏—Ç–µ—Å—å –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–º–∏ –≤–∏–¥–∞–º–∏" },
    { time: "06:15", activity: "–í—Å—Ç—Ä–µ—á–∞ —Ä–∞—Å—Å–≤–µ—Ç–∞ ‚Äî –º–∞–≥–∏—è –ø–µ—Ä–≤—ã—Ö –ª—É—á–µ–π —Å–æ–ª–Ω—Ü–∞, –æ—Å–≤–µ—â–∞—é—â–∏—Ö –±–µ—Å–∫—Ä–∞–π–Ω–∏–µ –≤–æ–¥—ã –∏ –∂–∏–≤–æ–ø–∏—Å–Ω—ã–µ –≥–æ—Ä—ã" },
    { time: "06:45", activity: "–ó–∞–≤—Ç—Ä–∞–∫ –Ω–∞ —Å–º–æ—Ç—Ä–æ–≤–æ–π: —É—Ç—Ä–µ–Ω–Ω–∏–π –ø—Ä–∏–µ–º –ø–∏—â–∏ –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —à–≤–µ–¥—Å–∫–æ–≥–æ —Å—Ç–æ–ª–∞ –Ω–∞ –≤—ã—Å–æ—Ç–µ —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º–∏ –≤–∏–¥–∞–º–∏" },
    { time: "08:00", activity: "–ü—Ä–æ–≥—É–ª–∫–∞ –Ω–∞ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–π –¥–ª–∏–Ω–Ω–æ—Ö–≤–æ—Å—Ç–æ–π –ª–æ–¥–∫–µ ‚Äî –≤–æ–¥–Ω–∞—è –ø—Ä–æ–≥—É–ª–∫–∞ –ø–æ –∂–∏–≤–æ–ø–∏—Å–Ω—ã–º –±—É—Ö—Ç–∞–º –∫ –æ—Å—Ç—Ä–æ–≤—É –î–∂–µ–π–º—Å–∞ –ë–æ–Ω–¥–∞" },
    { time: "09:30", activity: "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –Ω–∞ –ü—Ö—É–∫–µ—Ç. –ü–æ—Å–ª–µ –ø—Ä–æ–≥—É–ª–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫ –ø–ª—è–∂–∞–º –ü—Ö—É–∫–µ—Ç–∞" },
    { time: "10:30", activity: "–ü–ª—è–∂ —Å —Å–∞–º–æ–ª–µ—Ç–∞–º–∏. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–¥–µ–ª–∞—Ç—å –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ –∫–∞–¥—Ä—ã –Ω–∞ —Ñ–æ–Ω–µ –≤–∑–ª–µ—Ç–∞—é—â–∏—Ö –ø—Ä—è–º–æ –Ω–∞–¥ –≥–æ–ª–æ–≤–æ–π —Å–∞–º–æ–ª–µ—Ç–æ–≤" },
    { time: "12:30", activity: "–í–∏–∑–∏—Ç –≤ –∫–∞—Ñ–µ —Å –∫—É–≤—à–∏–Ω–∫–∞–º–∏. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤ –∑–Ω–∞–º–µ–Ω–∏—Ç–æ–º –∫–∞—Ñ–µ —Å –≥–∏–≥–∞–Ω—Ç—Å–∫–∏–º–∏ –∫—É–≤—à–∏–Ω–∫–∞–º–∏ Ma Doo Bua –¥–ª—è —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏–∏ –∏ –æ—Ç–¥—ã—Ö–∞" },
    { time: "13:00-13:30", activity: "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ –≤ –æ—Ç–µ–ª—å. –ü–æ—Å–ª–µ –ø–æ—Å–µ—â–µ–Ω–∏—è Ma Doo Bua Caf√© –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä—è–º–æ –≤ –æ—Ç–µ–ª—å –¥–ª—è –æ—Ç–¥—ã—Ö–∞ –ø–æ—Å–ª–µ –Ω–∞—Å—ã—â–µ–Ω–Ω–æ–≥–æ —É—Ç—Ä–∞" }
  ],
  requirements: [
    "–ü–æ–ª–æ—Ç–µ–Ω—Ü–µ –¥–ª—è –ø–ª—è–∂–∞",
    "–ö—É–ø–∞–ª—å–Ω—ã–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏",
    "–°–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–π –∫—Ä–µ–º",
    "–ì–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Ä –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç —Å–æ–ª–Ω—Ü–∞",
    "–°–º–µ–Ω–Ω—É—é –æ–¥–µ–∂–¥—É",
    "–§–æ—Ç–æ/–≤–∏–¥–µ–æ –∫–∞–º–µ—Ä—É –¥–ª—è –∑–∞–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è —è—Ä–∫–∏—Ö –º–æ–º–µ–Ω—Ç–æ–≤",
    "–î–µ–Ω—å–≥–∏ –Ω–∞ —Å—É–≤–µ–Ω–∏—Ä—ã –∏ –ª–∏—á–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã",
    "–î–æ–∂–¥–µ–≤–∏–∫–∏ –Ω–∞ —Å–ª—É—á–∞–π –ø–ª–æ—Ö–æ–π –ø–æ–≥–æ–¥—ã"
  ],
  importantInfo: [
    "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å—Å—è –≤ —Å–≤—è–∑–∏ —Å –ø–æ–≥–æ–¥–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏ –∏–ª–∏ –¥—Ä—É–≥–∏–º–∏ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–º–∏ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞–º–∏",
    "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ —Å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º —Ç–∞–π–º–∏–Ω–≥–æ–≤ –∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —ç—Ç–∞–ø–æ–≤ —ç–∫—Å–∫—É—Ä—Å–∏–∏",
    "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞–Ω–Ω–∏–π –ø–æ–¥—ä–µ–º –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –Ω–∞—Å–ª–∞–∂–¥–µ–Ω–∏—è —Ä–∞—Å—Å–≤–µ—Ç–æ–º",
    "–î–µ—Ç—Å–∫–∏–π –±–∏–ª–µ—Ç 4-11 –ª–µ—Ç –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ. –î–æ 3-—Ö –ª–µ—Ç –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ"
  ]
};

// üö® –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è - –í–ù–ò–ú–ê–ù–ò–ï: —Å–ª–µ–¥—É–µ—Ç —Ç–æ—á–Ω–æ PhiPhi —à–∞–±–ª–æ–Ω—É!
interface UniversalBookingModalProps {
  isOpen: boolean;
  onClose: () => void;
  excursion: {
    title: string;
    priceAdult: number;
    priceChild: number;
    currency: string;
  };
}

function UniversalBookingModal({ isOpen, onClose, excursion }: UniversalBookingModalProps) {
  const [adultCount, setAdultCount] = useState(2);
  const [childCount, setChildCount] = useState(0);
  const [infantCount, setInfantCount] = useState(0);
  const [selectedDate, setSelectedDate] = useState("");
  const [contactInfo, setContactInfo] = useState({
    name: "",
    phone: "",
    email: "",
    comment: ""
  });

  const totalPrice = (adultCount * excursion.priceAdult) + (childCount * excursion.priceChild);

  const handleBooking = () => {
    const message = `üåÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—É—Ä–∞: ${excursion.title}

üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:
‚Ä¢ –í–∑—Ä–æ—Å–ª—ã–µ: ${adultCount} —á–µ–ª.
‚Ä¢ –î–µ—Ç–∏ (4-11 –ª–µ—Ç): ${childCount} —á–µ–ª.
‚Ä¢ –ú–ª–∞–¥–µ–Ω—Ü—ã (–¥–æ 3 –ª–µ—Ç): ${infantCount} —á–µ–ª.

üìÖ –î–∞—Ç–∞ —Ç—É—Ä–∞: ${selectedDate}

üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${totalPrice.toLocaleString()} ${excursion.currency}

üë§ –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
‚Ä¢ –ò–º—è: ${contactInfo.name}
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: ${contactInfo.phone}
‚Ä¢ Email: ${contactInfo.email}
‚Ä¢ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${contactInfo.comment}`;

    const encodedMessage = encodeURIComponent(message);
    window.open(`https://t.me/Phuketga?text=${encodedMessage}`, '_blank');
    onClose();
  };

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-lg max-w-md w-full max-h-[90vh] overflow-y-auto">
        <div className="p-6">
          <div className="flex justify-between items-center mb-4">
            <h2 className="text-xl font-bold">–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—É—Ä–∞</h2>
            <button onClick={onClose} className="text-gray-500 hover:text-gray-700">
              <X className="w-6 h-6" />
            </button>
          </div>
          
          <h3 className="font-semibold mb-4">{excursion.title}</h3>
          
          <div className="space-y-4">
            <div>
              <label className="block text-sm font-medium mb-2">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</label>
              
              <div className="space-y-3">
                <div className="flex justify-between items-center">
                  <span>–í–∑—Ä–æ—Å–ª—ã–µ ({excursion.priceAdult.toLocaleString()} {excursion.currency})</span>
                  <div className="flex items-center gap-2">
                    <button 
                      onClick={() => setAdultCount(Math.max(1, adultCount - 1))}
                      className="w-8 h-8 rounded-full bg-gray-200 flex items-center justify-center"
                    >
                      <Minus className="w-4 h-4" />
                    </button>
                    <span className="w-8 text-center">{adultCount}</span>
                    <button 
                      onClick={() => setAdultCount(adultCount + 1)}
                      className="w-8 h-8 rounded-full bg-gray-200 flex items-center justify-center"
                    >
                      <Plus className="w-4 h-4" />
                    </button>
                  </div>
                </div>
                
                <div className="flex justify-between items-center">
                  <span>–î–µ—Ç–∏ 4-11 –ª–µ—Ç ({excursion.priceChild.toLocaleString()} {excursion.currency})</span>
                  <div className="flex items-center gap-2">
                    <button 
                      onClick={() => setChildCount(Math.max(0, childCount - 1))}
                      className="w-8 h-8 rounded-full bg-gray-200 flex items-center justify-center"
                    >
                      <Minus className="w-4 h-4" />
                    </button>
                    <span className="w-8 text-center">{childCount}</span>
                    <button 
                      onClick={() => setChildCount(childCount + 1)}
                      className="w-8 h-8 rounded-full bg-gray-200 flex items-center justify-center"
                    >
                      <Plus className="w-4 h-4" />
                    </button>
                  </div>
                </div>
                
                <div className="flex justify-between items-center">
                  <span>–ú–ª–∞–¥–µ–Ω—Ü—ã –¥–æ 3 –ª–µ—Ç (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)</span>
                  <div className="flex items-center gap-2">
                    <button 
                      onClick={() => setInfantCount(Math.max(0, infantCount - 1))}
                      className="w-8 h-8 rounded-full bg-gray-200 flex items-center justify-center"
                    >
                      <Minus className="w-4 h-4" />
                    </button>
                    <span className="w-8 text-center">{infantCount}</span>
                    <button 
                      onClick={() => setInfantCount(infantCount + 1)}
                      className="w-8 h-8 rounded-full bg-gray-200 flex items-center justify-center"
                    >
                      <Plus className="w-4 h-4" />
                    </button>
                  </div>
                </div>
              </div>
            </div>
            
            <div>
              <label className="block text-sm font-medium mb-2">–î–∞—Ç–∞ —Ç—É—Ä–∞</label>
              <input
                type="date"
                value={selectedDate}
                onChange={(e) => setSelectedDate(e.target.value)}
                className="w-full border border-gray-300 rounded-md px-3 py-2"
                min={new Date().toISOString().split('T')[0]}
              />
            </div>
            
            <div className="space-y-3">
              <input
                type="text"
                placeholder="–í–∞—à–µ –∏–º—è"
                value={contactInfo.name}
                onChange={(e) => setContactInfo({...contactInfo, name: e.target.value})}
                className="w-full border border-gray-300 rounded-md px-3 py-2"
              />
              <input
                type="tel"
                placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
                value={contactInfo.phone}
                onChange={(e) => setContactInfo({...contactInfo, phone: e.target.value})}
                className="w-full border border-gray-300 rounded-md px-3 py-2"
              />
              <input
                type="email"
                placeholder="Email"
                value={contactInfo.email}
                onChange={(e) => setContactInfo({...contactInfo, email: e.target.value})}
                className="w-full border border-gray-300 rounded-md px-3 py-2"
              />
              <textarea
                placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
                value={contactInfo.comment}
                onChange={(e) => setContactInfo({...contactInfo, comment: e.target.value})}
                className="w-full border border-gray-300 rounded-md px-3 py-2 h-20 resize-none"
              />
            </div>
            
            <div className="border-t pt-4">
              <div className="flex justify-between items-center text-lg font-bold">
                <span>–ò—Ç–æ–≥–æ:</span>
                <span>{totalPrice.toLocaleString()} {excursion.currency}</span>
              </div>
            </div>
            
            <Button 
              onClick={handleBooking}
              className="w-full bg-blue-600 hover:bg-blue-700 text-white"
              disabled={!selectedDate || !contactInfo.name || !contactInfo.phone}
            >
              –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∑–∞ {totalPrice.toLocaleString()} {excursion.currency}
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
}

export default function RassvetnoePrikljuchenie() {
  const [selectedImage, setSelectedImage] = useState<number | null>(null);
  const [currentImageIndex, setCurrentImageIndex] = useState(0);
  const [isBookingOpen, setIsBookingOpen] = useState(false);

  const openGallery = useCallback((index: number) => {
    setSelectedImage(index);
    setCurrentImageIndex(index);
  }, []);

  const closeGallery = useCallback(() => {
    setSelectedImage(null);
  }, []);

  const goToPrevious = useCallback(() => {
    setCurrentImageIndex((prev) => 
      prev === 0 ? excursion.gallery.length - 1 : prev - 1
    );
  }, []);

  const goToNext = useCallback(() => {
    setCurrentImageIndex((prev) => 
      prev === excursion.gallery.length - 1 ? 0 : prev + 1
    );
  }, []);

  useEffect(() => {
    const handleKeyDown = (e: KeyboardEvent) => {
      if (selectedImage !== null) {
        if (e.key === 'ArrowLeft') goToPrevious();
        if (e.key === 'ArrowRight') goToNext();
        if (e.key === 'Escape') closeGallery();
      }
    };

    window.addEventListener('keydown', handleKeyDown);
    return () => window.removeEventListener('keydown', handleKeyDown);
  }, [selectedImage, goToPrevious, goToNext, closeGallery]);

  return (
    <div className="min-h-screen bg-gray-50">
      <Header />
      
      {/* Hero Section */}
      <div className="relative h-64 md:h-96 overflow-hidden">
        <img 
          src={excursion.mainImage} 
          alt={excursion.title}
          className="w-full h-full object-cover"
        />
        <div className="absolute inset-0 bg-black bg-opacity-30 flex items-center justify-center">
          <div className="text-center text-white max-w-4xl mx-auto px-4">
            <h1 className="text-3xl md:text-5xl font-bold mb-2">{excursion.title}</h1>
            <p className="text-lg md:text-xl">{excursion.subtitle}</p>
          </div>
        </div>
      </div>

      {/* Breadcrumbs */}
      <div className="bg-white border-b">
        <div className="max-w-6xl mx-auto px-4 py-3">
          <nav className="text-sm text-gray-600">
            <Link to="/" className="hover:text-blue-600">–ì–ª–∞–≤–Ω–∞—è</Link>
            <span className="mx-2">/</span>
            <Link to="/tours" className="hover:text-blue-600">–¢—É—Ä—ã</Link>
            <span className="mx-2">/</span>
            <span>{excursion.title}</span>
          </nav>
        </div>
      </div>

      <div className="max-w-6xl mx-auto px-4 py-8">
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Left Column - Main Content */}
          <div className="lg:col-span-2 space-y-8">
            
            {/* Gallery Section */}
            <Card>
              <CardContent className="p-6">
                <h2 className="text-2xl font-bold mb-6">–§–æ—Ç–æ–≥–∞–ª–µ—Ä–µ—è —Ç—É—Ä–∞</h2>
                
                {/* Mobile Gallery - Single Column */}
                <div className="block md:hidden">
                  <div className="grid grid-cols-1 gap-4">
                    {excursion.gallery.map((image, index) => (
                      <div key={index} className="relative aspect-video overflow-hidden rounded-lg cursor-pointer" onClick={() => openGallery(index)}>
                        <img 
                          src={image} 
                          alt={`–§–æ—Ç–æ ${index + 1}`}
                          className="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
                        />
                      </div>
                    ))}
                  </div>
                </div>

                {/* Desktop Gallery - Grid Layout */}
                <div className="hidden md:block">
                  <div className="grid grid-cols-4 gap-4">
                    {excursion.gallery.map((image, index) => (
                      <div key={index} className="relative aspect-square overflow-hidden rounded-lg cursor-pointer" onClick={() => openGallery(index)}>
                        <img 
                          src={image} 
                          alt={`–§–æ—Ç–æ ${index + 1}`}
                          className="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
                        />
                      </div>
                    ))}
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Description Section */}
            <Card>
              <CardContent className="p-6">
                <h2 className="text-2xl font-bold mb-4">–û–ø–∏—Å–∞–Ω–∏–µ —Ç—É—Ä–∞</h2>
                <div className="prose max-w-none">
                  <p className="text-gray-700 mb-6">
                    –†–∞–Ω–Ω–µ–µ —É—Ç—Ä–æ, –≤—Å—Ç—Ä–µ—á–∞ —Ä–∞—Å—Å–≤–µ—Ç–∞ –Ω–∞ —Å—Ç–µ–∫–ª—è–Ω–Ω–æ–º –º–æ—Å—Ç—É, –∑–∞–≤—Ç—Ä–∞–∫ –Ω–∞ —Å–º–æ—Ç—Ä–æ–≤–æ–π, –æ—Å—Ç—Ä–æ–≤ –î–∂–µ–π–º—Å–∞ –ë–æ–Ω–¥–∞, 
                    —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø–ª—è–∂ —Å —Å–∞–º–æ–ª—ë—Ç–∞–º–∏ –∏ –∑–Ω–∞–º–µ–Ω–∏—Ç–æ–µ –∫–∞—Ñ–µ —Å –≥–∏–≥–∞–Ω—Ç—Å–∫–∏–º–∏ –∫—É–≤—à–∏–Ω–∫–∞–º–∏ ‚Äî –≤—Å—ë –≤ –æ–¥–Ω–æ–º –Ω–∞—Å—ã—â–µ–Ω–Ω–æ–º –¥–Ω–µ!
                  </p>
                  
                  <h3 className="text-xl font-semibold mb-3">–û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã —Ç—É—Ä–∞:</h3>
                  <ul className="space-y-2">
                    {excursion.highlights.map((highlight, index) => (
                      <li key={index} className="flex items-start gap-2">
                        <span className="text-blue-600 font-bold">‚Ä¢</span>
                        <span>{highlight}</span>
                      </li>
                    ))}
                  </ul>
                  
                  <div className="grid md:grid-cols-2 gap-6 mt-6">
                    <div>
                      <h4 className="font-semibold mb-3 text-green-700">–í —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤–∫–ª—é—á–µ–Ω–æ:</h4>
                      <ul className="space-y-1 text-sm">
                        {excursion.included.map((item, index) => (
                          <li key={index} className="flex items-start gap-2">
                            <span className="text-green-600">‚úì</span>
                            <span>{item}</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                    
                    <div>
                      <h4 className="font-semibold mb-3 text-red-700">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è:</h4>
                      <ul className="space-y-1 text-sm">
                        {excursion.excluded.map((item, index) => (
                          <li key={index} className="flex items-start gap-2">
                            <span className="text-red-600">‚Ä¢</span>
                            <span>{item}</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Right Column - Booking Card */}
          <div className="lg:col-span-1">
            <Card className="sticky top-4">
              <CardContent className="p-6">
                <div className="flex items-center gap-2 mb-4">
                  <Star className="w-5 h-5 text-yellow-400 fill-current" />
                  <span className="font-semibold">{excursion.rating}</span>
                  <span className="text-gray-600">({excursion.reviewsCount} –æ—Ç–∑—ã–≤–æ–≤)</span>
                </div>
                
                <div className="mb-6">
                  <div className="text-3xl font-bold text-blue-600 mb-1">
                    –æ—Ç {excursion.priceAdult.toLocaleString()} {excursion.currency}
                  </div>
                  <div className="text-gray-600">–∑–∞ –≤–∑—Ä–æ—Å–ª–æ–≥–æ</div>
                  <div className="text-sm text-gray-500 mt-1">
                    –î–µ—Ç–∏ 4-11 –ª–µ—Ç: {excursion.priceChild.toLocaleString()} {excursion.currency}
                  </div>
                </div>
                
                <div className="space-y-3 mb-6">
                  <div className="flex items-center gap-2 text-gray-700">
                    <Clock className="w-4 h-4" />
                    <span>{excursion.duration}</span>
                  </div>
                  <div className="flex items-center gap-2 text-gray-700">
                    <Users className="w-4 h-4" />
                    <span>{excursion.groupSize}</span>
                  </div>
                  <div className="flex items-center gap-2 text-gray-700">
                    <MapPin className="w-4 h-4" />
                    <span>–¢—Ä–∞–Ω—Å—Ñ–µ—Ä –≤–∫–ª—é—á–µ–Ω</span>
                  </div>
                </div>
                
                <Button 
                  onClick={() => setIsBookingOpen(true)}
                  className="w-full bg-blue-600 hover:bg-blue-700 text-white py-3"
                >
                  –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∑–∞ {excursion.priceAdult.toLocaleString()} {excursion.currency}
                </Button>
                
                <div className="text-center text-sm text-gray-500 mt-4">
                  –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã
                </div>
              </CardContent>
            </Card>
          </div>
        </div>

        {/* Itinerary Section */}
        <Card className="mt-8">
          <CardContent className="p-6">
            <h2 className="text-2xl font-bold mb-6">–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—É—Ä–∞</h2>
            <div className="space-y-4">
              {excursion.schedule.map((item, index) => (
                <div key={index} className="flex gap-4 border-l-2 border-blue-200 pl-4">
                  <div className="flex items-center gap-2 min-w-0">
                    <Calendar className="w-4 h-4 text-blue-600 flex-shrink-0" />
                    <span className="font-semibold text-blue-600 whitespace-nowrap">{item.time}</span>
                  </div>
                  <div className="flex-1">
                    <p className="text-gray-700">{item.activity}</p>
                  </div>
                </div>
              ))}
            </div>
            
            <div className="mt-8 grid md:grid-cols-2 gap-6">
              <div>
                <h3 className="font-semibold mb-3">–ß—Ç–æ –≤–∑—è—Ç—å —Å —Å–æ–±–æ–π:</h3>
                <ul className="space-y-1 text-sm">
                  {excursion.requirements.map((item, index) => (
                    <li key={index} className="flex items-start gap-2">
                      <span className="text-blue-600">‚Ä¢</span>
                      <span>{item}</span>
                    </li>
                  ))}
                </ul>
              </div>
              
              <div>
                <h3 className="font-semibold mb-3">–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h3>
                <ul className="space-y-1 text-sm">
                  {excursion.importantInfo.map((item, index) => (
                    <li key={index} className="flex items-start gap-2">
                      <span className="text-orange-600">‚ö†</span>
                      <span>{item}</span>
                    </li>
                  ))}
                </ul>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Image Gallery Modal */}
      {selectedImage !== null && (
        <div className="fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50">
          <button 
            onClick={closeGallery}
            className="absolute top-4 right-4 text-white hover:text-gray-300 z-10"
          >
            <X className="w-8 h-8" />
          </button>
          
          <button 
            onClick={goToPrevious}
            className="absolute left-4 top-1/2 transform -translate-y-1/2 text-white hover:text-gray-300 z-10"
          >
            <ChevronLeft className="w-8 h-8" />
          </button>
          
          <button 
            onClick={goToNext}
            className="absolute right-4 top-1/2 transform -translate-y-1/2 text-white hover:text-gray-300 z-10"
          >
            <ChevronRight className="w-8 h-8" />
          </button>
          
          <div className="relative max-w-4xl max-h-full p-4">
            <img 
              src={excursion.gallery[currentImageIndex]} 
              alt={`–§–æ—Ç–æ ${currentImageIndex + 1}`}
              className="max-w-full max-h-full object-contain"
            />
          </div>
          
          <div className="absolute bottom-4 left-1/2 transform -translate-x-1/2 text-white">
            {currentImageIndex + 1} / {excursion.gallery.length}
          </div>
        </div>
      )}

      <UniversalBookingModal 
        isOpen={isBookingOpen}
        onClose={() => setIsBookingOpen(false)}
        excursion={excursion}
      />

      <Footer />
    </div>
  );
}