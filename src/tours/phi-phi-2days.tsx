import React, { useState, useEffect } from "react";
import { Link } from "react-router-dom";
import { Header } from "@/components/Header";
import { Footer } from "@/components/Footer";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Clock, Users, MapPin, Star, Calendar, X, ChevronLeft, ChevronRight, Grid3X3 } from "lucide-react";
import { UniversalBookingModal } from "@/components/UniversalBookingModal";
import { TourData } from "@/types/Tour";

// üì∏ –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø –ò–ó ASSETS
import mayaBay1 from "../assets/phi-phi-2days/maya-bay-1.jpg";
import mayaBay2 from "../assets/phi-phi-2days/maya-bay-2.jpg";
import mayaBay3 from "../assets/phi-phi-2days/maya-bay-3.jpg";
import mayaBay4 from "../assets/phi-phi-2days/maya-bay-4.jpg";
import pilehLagoon from "../assets/phi-phi-2days/pileh-lagoon.jpg";
import vikingCave from "../assets/phi-phi-2days/viking-cave.jpg";
import bambooIsland from "../assets/phi-phi-2days/bamboo-island.webp";
import fireShow1 from "../assets/phi-phi-2days/fire-show-1.jpg";
import fireShow2 from "../assets/phi-phi-2days/fire-show-2.jpg";
import fireShow3 from "../assets/phi-phi-2days/fire-show-3.jpg";

// üéØ –ï–î–ò–ù–´–ô –ò–°–¢–û–ß–ù–ò–ö –î–ê–ù–ù–´–• –í –û–î–ù–û–ú –§–ê–ô–õ–ï - –∫–∞–∫ WordPress –ø–æ—Å—Ç  
export const phiPhiTourData: TourData = {
  id: "phi-phi-2days",
  title: "–ü—Ö–∏-–ü—Ö–∏ 2 –¥–Ω—è / 1 –Ω–æ—á—å",
  subtitle: "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ –æ—Å—Ç—Ä–æ–≤–∞ —Å –Ω–æ—á—ë–≤–∫–æ–π",
  description: "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è –¥–≤—É—Ö–¥–Ω–µ–≤–Ω–∞—è —ç–∫—Å–∫—É—Ä—Å–∏—è –Ω–∞ –æ—Å—Ç—Ä–æ–≤–∞ –ü—Ö–∏-–ü—Ö–∏ —Å –Ω–æ—á—ë–≤–∫–æ–π –≤ –æ—Ç–µ–ª–µ. –ü–æ—Å–µ—Ç–∏—Ç–µ –∑–Ω–∞–º–µ–Ω–∏—Ç—É—é –±—É—Ö—Ç—É –ú–∞–π—è –ë–µ–π –∏–∑ —Ñ–∏–ª—å–º–∞ '–ü–ª—è–∂' —Å –õ–µ–æ–Ω–∞—Ä–¥–æ –î–∏ –ö–∞–ø—Ä–∏–æ, –∏—Å–∫—É–ø–∞–π—Ç–µ—Å—å –≤ –∏–∑—É–º—Ä—É–¥–Ω–æ–π –ª–∞–≥—É–Ω–µ –ü–∏–ª–µ, –∏—Å—Å–ª–µ–¥—É–π—Ç–µ –ø–µ—â–µ—Ä—É –í–∏–∫–∏–Ω–≥–æ–≤ –∏ –Ω–∞—Å–ª–∞–¥–∏—Ç–µ—Å—å –æ–≥–Ω–µ–Ω–Ω—ã–º —à–æ—É –Ω–∞ –ø–ª—è–∂–µ.",

  // –¶–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
  priceAdult: 4500,
  priceChild: 2250,
  currency: "‚Çø",

  // –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
  duration: "2 –¥–Ω—è / 1 –Ω–æ—á—å",
  groupSize: "–¥–æ 15 —á–µ–ª–æ–≤–µ–∫", 
  rating: 4.8,
  reviewsCount: 203,
  route: "–ü—Ö—É–∫–µ—Ç ‚Üí –ü—Ö–∏-–ü—Ö–∏ –î–æ–Ω ‚Üí –ú–∞–π—è –ë–µ–π ‚Üí –ü–∏–ª–µ ‚Üí –ë–∞–º–±—É ‚Üí –ü—Ö—É–∫–µ—Ç",

  // –ì–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  gallery: [
    mayaBay1,
    mayaBay2,
    mayaBay3, 
    mayaBay4,
    pilehLagoon,
    vikingCave,
    bambooIsland,
    fireShow1,
    fireShow2,
    fireShow3
  ],

  // –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—É—Ä–∞
  itinerary: [
    {
      day: 1,
      title: "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –ü—Ö–∏-–ü—Ö–∏",
      time: "08:00",
      description: "–¢—Ä–∞–Ω—Å—Ñ–µ—Ä –∏–∑ –æ—Ç–µ–ª—è –Ω–∞ –ø–∏—Ä—Å, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç–Ω–æ–º –∫–∞—Ç–µ—Ä–µ"
    },
    {
      day: 1, 
      title: "–û—Å—Ç—Ä–æ–≤ –ü—Ö–∏-–ü—Ö–∏ –î–æ–Ω",
      time: "10:00",
      description: "–ü—Ä–∏–±—ã—Ç–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—ã–π –æ—Å—Ç—Ä–æ–≤, –∑–∞—Å–µ–ª–µ–Ω–∏–µ –≤ –æ—Ç–µ–ª—å, –æ–±–µ–¥"
    },
    {
      day: 1,
      title: "–ë—É—Ö—Ç–∞ –ú–∞–π—è –ë–µ–π",
      time: "14:00", 
      description: "–ü–æ—Å–µ—â–µ–Ω–∏–µ –∑–Ω–∞–º–µ–Ω–∏—Ç–æ–π –±—É—Ö—Ç—ã –∏–∑ —Ñ–∏–ª—å–º–∞ '–ü–ª—è–∂', —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—è"
    },
    {
      day: 1,
      title: "–õ–∞–≥—É–Ω–∞ –ü–∏–ª–µ",
      time: "15:30",
      description: "–ü–ª–∞–≤–∞–Ω–∏–µ –≤ –∏–∑—É–º—Ä—É–¥–Ω–æ–π –ª–∞–≥—É–Ω–µ, —Å–Ω–æ—Ä–∫–ª–∏–Ω–≥"
    },
    {
      day: 1,
      title: "–û–≥–Ω–µ–Ω–Ω–æ–µ —à–æ—É",
      time: "20:00",
      description: "–£–∂–∏–Ω –∏ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–µ –æ–≥–Ω–µ–Ω–Ω–æ–µ —à–æ—É –Ω–∞ –ø–ª—è–∂–µ"
    },
    {
      day: 2,
      title: "–ü–µ—â–µ—Ä–∞ –í–∏–∫–∏–Ω–≥–æ–≤",
      time: "09:00",
      description: "–ó–∞–≤—Ç—Ä–∞–∫, –ø–æ—Å–µ—â–µ–Ω–∏–µ –ø–µ—â–µ—Ä—ã —Å –¥—Ä–µ–≤–Ω–∏–º–∏ —Ä–∏—Å—É–Ω–∫–∞–º–∏"
    },
    {
      day: 2,
      title: "–û—Å—Ç—Ä–æ–≤ –ë–∞–º–±—É",
      time: "11:00", 
      description: "–†–µ–ª–∞–∫—Å –Ω–∞ –±–µ–ª–æ—Å–Ω–µ–∂–Ω–æ–º –ø–ª—è–∂–µ, —Å–Ω–æ—Ä–∫–ª–∏–Ω–≥"
    },
    {
      day: 2,
      title: "–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –ü—Ö—É–∫–µ—Ç",
      time: "15:00",
      description: "–û–±–µ–¥, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ –ü—Ö—É–∫–µ—Ç, —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä –≤ –æ—Ç–µ–ª—å"
    }
  ],

  // –ß—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ
  included: [
    "–¢—Ä–∞–Ω—Å—Ñ–µ—Ä —Ç—É–¥–∞-–æ–±—Ä–∞—Ç–Ω–æ",
    "–†–∞–∑–º–µ—â–µ–Ω–∏–µ –≤ –æ—Ç–µ–ª–µ –Ω–∞ –ü—Ö–∏-–ü—Ö–∏ (1 –Ω–æ—á—å)",
    "–ó–∞–≤—Ç—Ä–∞–∫ –∏ –æ–±–µ–¥", 
    "–≠–∫—Å–∫—É—Ä—Å–∏–æ–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞",
    "–í—Ö–æ–¥–Ω—ã–µ –±–∏–ª–µ—Ç—ã –≤ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∫–∏",
    "–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å–Ω–æ—Ä–∫–ª–∏–Ω–≥–∞",
    "–°—Ç—Ä–∞—Ö–æ–≤–∫–∞",
    "–†—É—Å—Å–∫–æ–≥–æ–≤–æ—Ä—è—â–∏–π –≥–∏–¥"
  ],

  // –ß—Ç–æ –ù–ï –≤–∫–ª—é—á–µ–Ω–æ
  notIncluded: [
    "–£–∂–∏–Ω—ã (–∫—Ä–æ–º–µ –¥–Ω—è —Å –æ–≥–Ω–µ–Ω–Ω—ã–º —à–æ—É)",
    "–õ–∏—á–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã",
    "–ê–ª–∫–æ–≥–æ–ª—å–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏", 
    "–ß–∞–µ–≤—ã–µ –≥–∏–¥—É –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—É"
  ],

  // –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  importantInfo: [
    "–î–µ—Ç—Å–∫–∏–π –±–∏–ª–µ—Ç 4-11 –ª–µ—Ç –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ. –î–æ 3-—Ö –ª–µ—Ç –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ –±–µ–∑ –º–µ—Å—Ç–∞ –≤ –º–∏–Ω–∏–≤—ç–Ω–µ",
    "–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—É—Ä–∞ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π, –ø—Ä–∏–ª–∏–≤–æ–≤ –∏ –æ—Ç–ª–∏–≤–æ–≤",
    "–ë—É—Ö—Ç–∞ –ú–∞–π—è –ë–µ–π –∑–∞–∫—Ä—ã—Ç–∞ –¥–ª—è –ø–æ—Å–µ—â–µ–Ω–∏—è —Å 1 –∞–≤–≥—É—Å—Ç–∞ –ø–æ 30 —Å–µ–Ω—Ç—è–±—Ä—è",
    "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –±–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –¥–µ—Ç–µ–π –¥–æ –≥–æ–¥–∞, –ª—é–¥–µ–π –ª—é–±–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ –∏ –≤–µ—Å–∞"
  ],

  isPopular: true,

  // üè∑Ô∏è –¶–ï–ù–¢–†–ê–õ–ò–ó–û–í–ê–ù–ù–´–ï –¢–ï–ì–ò - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—è–≤—è—Ç—Å—è –≤–µ–∑–¥–µ
  tags: [
    "–º–æ—Ä—Å–∫–∏–µ —ç–∫—Å–∫—É—Ä—Å–∏–∏",
    "–æ—Å—Ç—Ä–æ–≤–∞",
    "—Å–Ω–æ—Ä–∫–ª–∏–Ω–≥", 
    "–ø–ª—è–∂–∏",
    "–ø—Ö–∏ –ø—Ö–∏",
    "–Ω–æ—á—ë–≤–∫–∞",
    "–º–∞–π—è –±—ç–π",
    "–ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è"
  ],
};

// üé® –ö–û–ú–ü–û–ù–ï–ù–¢ –°–¢–†–ê–ù–ò–¶–´ –í –¢–û–ú –ñ–ï –§–ê–ô–õ–ï - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç—å
export const PhiPhiTourPage: React.FC = () => {
  const [selectedImage, setSelectedImage] = useState<string | null>(null);
  const [selectedImageIndex, setSelectedImageIndex] = useState<number>(0);
  const [showBookingModal, setShowBookingModal] = useState(false);
  const [currentSlide, setCurrentSlide] = useState(0);

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —ç—Ç–æ–≥–æ –∂–µ —Ñ–∞–π–ª–∞
  const excursion = phiPhiTourData;

  const openModal = (image: string, index: number) => {
    setSelectedImage(image);
    setSelectedImageIndex(index);
  };

  const closeModal = () => {
    setSelectedImage(null);
  };

  const nextImage = () => {
    const nextIndex = (selectedImageIndex + 1) % excursion.gallery.length;
    setSelectedImage(excursion.gallery[nextIndex]);
    setSelectedImageIndex(nextIndex);
  };

  const prevImage = () => {
    const prevIndex = selectedImageIndex === 0 ? excursion.gallery.length - 1 : selectedImageIndex - 1;
    setSelectedImage(excursion.gallery[prevIndex]);
    setSelectedImageIndex(prevIndex);
  };

  const nextSlide = () => {
    setCurrentSlide((prev) => (prev + 1) % Math.ceil(excursion.gallery.length / 6));
  };

  const prevSlide = () => {
    setCurrentSlide((prev) => prev === 0 ? Math.ceil(excursion.gallery.length / 6) - 1 : prev - 1);
  };

  useEffect(() => {
    const handleKeyDown = (event: KeyboardEvent) => {
      if (selectedImage) {
        if (event.key === 'ArrowLeft') {
          prevImage();
        } else if (event.key === 'ArrowRight') {
          nextImage();
        } else if (event.key === 'Escape') {
          closeModal();
        }
      }
    };

    document.addEventListener('keydown', handleKeyDown);
    return () => {
      document.removeEventListener('keydown', handleKeyDown);
    };
  }, [selectedImage, selectedImageIndex]);

  return (
    <div className="min-h-screen bg-white pb-20 lg:pb-0">
      <Header />
      
      {/* Breadcrumbs */}
      <section className="pt-20 pb-4">
        <div className="container mx-auto px-4">
          <nav className="text-sm text-gray-500">
            <div className="flex items-center space-x-2">
              <Link to="/" className="hover:text-green-600 transition-colors">–ì–ª–∞–≤–Ω–∞—è</Link>
              <span>‚Ä∫</span>
              <Link to="/tours" className="hover:text-green-600 transition-colors">–¢—É—Ä—ã</Link>
              <span>‚Ä∫</span>
              <Link to="/tours?category=islands" className="hover:text-green-600 transition-colors">–û—Å—Ç—Ä–æ–≤–∞</Link>
              <span>‚Ä∫</span>
              <span className="text-gray-700">–ü—Ö–∏-–ü—Ö–∏ 2 –¥–Ω—è / 1 –Ω–æ—á—å</span>
            </div>
          </nav>
        </div>
      </section>

      {/* Hero Gallery */}
      <section className="relative">
        <div className="container mx-auto px-4">
          {/* Mobile Gallery Slider */}
          <div className="block lg:hidden mb-4">
            <div className="relative overflow-hidden rounded-lg">
              <div 
                className="flex transition-transform duration-300 ease-in-out"
                style={{ transform: `translateX(-${currentSlide * 100}%)` }}
              >
                {excursion.gallery.slice(0, 6).map((image, index) => (
                  <div 
                    key={index}
                    className="flex-shrink-0 w-full snap-center"
                    onClick={() => openModal(image, index)}
                  >
                    <div className="aspect-[4/3] relative overflow-hidden">
                      <img 
                        src={image} 
                        alt={`Gallery ${index + 1}`}
                        className="w-full h-full object-cover object-center"
                      />
                      {/* Overlay —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ñ–æ—Ç–æ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–º —Å–ª–∞–π–¥–µ */}
                      {index === 5 && excursion.gallery.length > 6 && (
                        <div className="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center">
                          <div className="text-white text-center">
                            <div className="text-2xl font-bold mb-1">+{excursion.gallery.length - 6}</div>
                            <div className="text-sm">—Ñ–æ—Ç–æ</div>
                          </div>
                        </div>
                      )}
                    </div>
                  </div>
                ))}
              </div>
              
              {/* Navigation dots */}
              <div className="absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2">
                {Array.from({ length: Math.ceil(excursion.gallery.length / 6) }).map((_, index) => (
                  <button
                    key={index}
                    onClick={() => setCurrentSlide(index)}
                    className={`w-2 h-2 rounded-full ${
                      currentSlide === index ? 'bg-white' : 'bg-white bg-opacity-50'
                    }`}
                  />
                ))}
              </div>
            </div>
          </div>

          {/* Desktop Gallery Grid */}
          <div className="hidden lg:grid lg:grid-cols-4 lg:gap-2 lg:h-96">
            {/* Main large image */}
            <div 
              className="lg:col-span-2 lg:row-span-2 relative overflow-hidden rounded-lg cursor-pointer group"
              onClick={() => openModal(excursion.gallery[0], 0)}
            >
              <img 
                src={excursion.gallery[0]} 
                alt="Main tour image" 
                className="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
              />
            </div>

            {/* Smaller images */}
            {excursion.gallery.slice(1, 5).map((image, index) => (
              <div 
                key={index + 1}
                className="relative overflow-hidden rounded-lg cursor-pointer group"
                onClick={() => openModal(image, index + 1)}
              >
                <img 
                  src={image} 
                  alt={`Gallery ${index + 2}`}
                  className="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                />
                {/* Show all photos overlay on last image */}
                {index === 3 && excursion.gallery.length > 5 && (
                  <div className="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center">
                    <div className="text-white text-center">
                      <Grid3X3 className="w-8 h-8 mx-auto mb-2" />
                      <div className="text-sm font-medium">–í—Å–µ {excursion.gallery.length} —Ñ–æ—Ç–æ</div>
                    </div>
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* ‚úÖ –¶–ï–ù–¢–†–ê–õ–ò–ó–û–í–ê–ù–ù–´–ï –¢–ï–ì–ò –∏–∑ –¥–∞–Ω–Ω—ã—Ö —Ç—É—Ä–∞ */}
      <section className="pb-4">
        <div className="container mx-auto px-4">
          <div className="flex flex-wrap gap-2">
            {excursion.tags?.map((tag, index) => (
              <Link
                key={index}
                to={`/tours?tag=${encodeURIComponent(tag)}`}
                className="px-3 py-1.5 bg-gray-100 text-gray-700 rounded-full text-sm font-medium hover:bg-gray-200 cursor-pointer transition-colors"
              >
                {tag}
              </Link>
            ))}
          </div>
        </div>
      </section>

      {/* Title and meta info */}
      <section className="py-6">
        <div className="container mx-auto px-4">
          <h1 className="text-2xl md:text-4xl font-bold mb-4 text-gray-900 leading-tight">
            {excursion.title}
          </h1>
          <p className="text-lg text-gray-600 mb-6 leading-relaxed">
            {excursion.subtitle}
          </p>
          
          <div className="flex flex-wrap items-center gap-4 mb-4">
            <div className="flex items-center gap-2">
              <Star className="w-4 h-4 text-yellow-400 fill-current" />
              <span className="font-semibold text-gray-900">{excursion.rating}</span>
              <span className="text-gray-500 text-sm">({excursion.reviewsCount} –æ—Ç–∑—ã–≤–æ–≤)</span>
            </div>
            <div className="flex items-center gap-2 text-gray-500 text-sm">
              <Clock className="w-4 h-4" />
              <span>{excursion.duration}</span>
            </div>
            <div className="flex items-center gap-2 text-gray-500 text-sm">
              <Users className="w-4 h-4" />
              <span>{excursion.groupSize}</span>
            </div>
          </div>
          
          {/* Mobile price */}
          <div className="lg:hidden bg-green-50 border border-green-200 rounded-lg p-4 mb-6">
            <div className="flex items-center justify-between">
              <div>
                <div className="text-2xl font-bold text-green-600">{excursion.currency}{excursion.priceAdult.toLocaleString()}</div>
                <div className="text-sm text-gray-500">–∑–∞ –≤–∑—Ä–æ—Å–ª–æ–≥–æ</div>
              </div>
              <Button 
                onClick={() => setShowBookingModal(true)}
                className="bg-green-600 hover:bg-green-700 text-white"
              >
                –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å
              </Button>
            </div>
          </div>
        </div>
      </section>

      {/* Rest of the component... –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      
      <Footer />
      
      {/* Modals */}
      {selectedImage && (
        <div className="fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center z-50 p-4">
          <div className="relative max-w-4xl max-h-full">
            <button
              onClick={closeModal}
              className="absolute top-4 right-4 text-white hover:text-gray-300 z-10"
            >
              <X className="w-8 h-8" />
            </button>
            <button
              onClick={prevImage}
              className="absolute left-4 top-1/2 transform -translate-y-1/2 text-white hover:text-gray-300 z-10"
            >
              <ChevronLeft className="w-8 h-8" />
            </button>
            <button
              onClick={nextImage}
              className="absolute right-4 top-1/2 transform -translate-y-1/2 text-white hover:text-gray-300 z-10"
            >
              <ChevronRight className="w-8 h-8" />
            </button>
            <img
              src={selectedImage}
              alt="Gallery"
              className="max-w-full max-h-full object-contain"
            />
            <div className="absolute bottom-4 left-1/2 transform -translate-x-1/2 text-white text-sm">
              {selectedImageIndex + 1} / {excursion.gallery.length}
            </div>
          </div>
        </div>
      )}

      <UniversalBookingModal
        isOpen={showBookingModal}
        onClose={() => setShowBookingModal(false)}
        tourData={excursion}
      />
    </div>
  );
};